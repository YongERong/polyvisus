[
    [
      "Thy self thy foe",
      "by the grave and thee",
      "where all thy beauty lies",
      "Were an all-eating shame",
      "Shall sum my count",
      "Thou dost beguile the world",
      "Make sweet some vial",
      "treasure thou some place",
      "Sweets with sweets war not",
      "joy delights in joy",
      "one pleasing note do sing",
      "Thou single wilt prove none",
      "O change thy thought",
      "when thou from youth convertest",
      "O that you were your self",
      "than you your self here live",
      "to store thou wouldst convert",
      "Vaunt in their youthful sap",
      "that thou mayst true love call",
      "Beauteous thou art"
    ],
    [
      "Thy own self is thy foe",
      "by the eternal grave and thee",
      "wherein all thy beauty deeply lies",
      "Were but an all-consuming shame",
      "Shall truly sum up my count",
      "Thou dost cunningly beguile the world",
      "Make this sweet vial more divine",
      "treasure thou some secret hidden place",
      "Sweets with sweeter things do war not",
      "Pure joy delights in eternal joy",
      "one single pleasing note do sing",
      "Thou being single wilt prove no one",
      "O change thy inward thought completely",
      "when thou turnest away from youth",
      "O that you could be your self",
      "better than you your self could live",
      "to store thy wealth thou wouldst convert",
      "Vaunt proudly in their youthful green sap",
      "that thou mayst call it true love",
      "Thou art most beauteous and divine"
    ],
    [
        "let square x = x * x;;",
        "member(X, [X|_]).",
        "(loop for i from 1 to 10 sum i)",
        "+[-<->]<[->+++<]>>[->+>++<].",
        "if x > y then x + y else x - y;;",
        ">+[[<+++>+]<]>+++++[-<+++>]+.",
        "let rec fact n = if n = 0 then 1 else n * fact (n - 1);;",
        ">+++[->+++>--<<]>>>++[->+<].",
        "(defun square (x) (* x x))",
        "sibling(X, Y) :- parent(Z, X), parent(Z, Y).",
        "factorial(N, F) :- N > 0, N1 is N - 1, factorial(N1, F1), F is N * F1.",
        "+[->++<]>[-<+++>]<<++[-<->].",
        "Array.fold_left (+) 0 [|1; 2; 3; 4|];;",
        "List.map (fun x -> x * x) [1; 2; 3];;",
        "parent(john, mary).",
        "(if (> x y) (+ x y) (- x y))",
        "(mapcar #'sqrt '(1 4 9 16))",
        "factorial(0, 1).",
        "(lambda (a b) (max a b))",
        ">++[->++++<]>[-<+>>++<<]+++."
    ]
]
  